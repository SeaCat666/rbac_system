<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--
  http：用于定义相关权限控制
  指定哪些资源不需要进行权限校验，可以使用通配符
-->

    <!-- 配置不拦截的资源 -->
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="/login.jsp" security="none"/>
    <security:http pattern="/login.html" security="none"/>
    <security:http pattern="/failer.jsp" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>
    <security:http pattern="WEB-INF/favicon.ico" security="none"></security:http>
    <!--1.拦截规则配置  -->
    <security:http auto-config="true" use-expressions="true">
        <!--  pattern="/**" 拦截所有的路径  access="ROLE_ADMIN"
          要访问符合pattern的url时，登陆用户必须有ROLE_ADMIN的角色，如果没有则不能访问
          security:intercept-url： 可以配置多个 -->
        <security:intercept-url pattern="/**" access="isAuthenticated()"/>

        <!--   登陆配置 form-login
        login-page: 登陆页面
        username-parameter: 前端传过来的用户名的参数名
        password-parameter: 前端传过来的密码的参数名
        login-processing-url: 处理登陆请求的url
        default-target-url: 登陆成功后默认跳转的页面, success.html -> login.html->success.html
        always-use-default-target: true不管是从哪个页面转到login.html，登陆后都跑到default-target-url36
            success.html -> login.html-> index.html
        authentication-failure-url: 登陆失败后跳转的页面
    -->

        <security:form-login login-page="/login.jsp" username-parameter="userName" password-parameter="password"
                             login-processing-url="/login" default-target-url="/index.jsp"
                             always-use-default-target="true" authentication-failure-url="/pages/failer.jsp"/>
        <!--关闭盗链安全请求-->
        <!-- 关闭跨域请求 -->
        <security:csrf disabled="true"/>
        <!--退出-->
        <security:logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/login.jsp"/>
    </security:http>
    <!--2.认证管理器  --><!-- 切换成数据库中的用户名和密码 -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="UsersInfoService">
            <!-- 配置加密的方式-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
    <!-- 配置加密类 -->
    <!--    登陆时会自行进行密码匹配-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
    <bean id="UsersInfoService" class="com.dsc.security.UsersInfoService"></bean>
    <!--    服务器端方法级权限控制  配置组件扫描，用于扫描`Controller`-->
    <context:component-scan base-package="com.dsc.controller"/>
    <mvc:annotation-driven></mvc:annotation-driven>
    <!--开启注解方式权限控制-->
    <security:global-method-security pre-post-annotations="enabled"/>
</beans>